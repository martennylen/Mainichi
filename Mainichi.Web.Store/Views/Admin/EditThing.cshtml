@using Mainichi.Web.Store.Extensions
@model Mainichi.Web.Store.ViewModels.Input.ThingInputViewModel

@using (Html.BeginForm("AddOrUpdateThing", "Admin",
    FormMethod.Post, new { @class = "formalizer", enctype = "multipart/form-data" }))
{
    <fieldset>
        <legend>Hantera produkt</legend>
        <div>
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "long" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <div>
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { rows = "15" })
            @Html.ValidationMessageFor(m => m.Description)
        </div>
        <div>
            <label>Produktattribut</label>
            <!-- ko foreach: attributes -->
            <div>
                <label style="display:inline-block;font-size:0.7em">Namn:</label>
                <input type="text" style="" data-bind="value: Name, attr: {name: 'Attributes[' + $index() + '].Name' }" />
                <label style="display: inline-block; font-size: 0.7em">Värde:</label>
                <input type="text" style="font-size: 0.7em" data-bind="value: Value, attr: {name: 'Attributes[' + $index() + '].Value' }" />
                <button type="button" class="danger" data-bind="click: $parent.removeAttribute">Ta bort</button>
            </div>
            <!-- /ko -->
            <button type="button" class="yeah" data-bind="click: addAttribute">Lägg till</button>
        </div>
        <div>
            @Html.LabelFor(m => m.Price)
            @Html.TextBoxFor(m => m.Price)
            @Html.ValidationMessageFor(m => m.Price)
        </div>
        <div class="edit-image-list">
            <ul style="list-style-type: none;padding-left:0">
                <!-- ko foreach: slides -->
                <li class="image-container" data-bind="visible: !DeleteMe()">
                    <div>
                        <img class="image-for-editing" data-bind="click: editImage, attr: { src: '/Content/Snapshots/Products/' + OriginalFileName }" />
                        <input class="long" style="padding: 0" data-bind="value: FileName, attr: {name: 'Slides[' + $index() + '].FileName' }" type="text" />
                        <span data-bind="visible: imageHasChanged" style="color: red">*</span>
                        <textarea data-bind="html: Text, attr: {name: 'Slides[' + $index() + '].Text' }"></textarea>
                        <span>Index:</span>
                        <select data-bind="options: $parent.indexList, value: Index, attr: {name: 'Slides[' + $index() + '].Index' }"></select>
                        <div style="text-align: left">
                            <button type="button" class="danger" data-bind="enable: $parent.hasImages, click: $parent.removeImage">Ta bort bild</button>
                        </div>
                    </div>
                    @*<div data-bind="visible: isImageEditing" class="file-upload btn btn-danger">*@
                    <div style="display: none">
                        @*<span>Välj bildfil</span>*@
                        <input type="file" data-bind="event: { change: function(){ populateFileName($element.value); }}, attr: {name: 'Slides[' + $index() + '].File'}" accept="image/*" class="upload" />
                        <input type="hidden" data-bind="value: IsNew, attr: {name: 'Slides[' + $index() + '].IsNew' }" />
                        <input type="hidden" data-bind="value: DeleteMe, attr: {name: 'Slides[' + $index() + '].DeleteMe' }" />
                        @*<button data-bind="click: editImage">Avbryt</button>*@

                        @*@Html.TextBox("Slides", null, new { type = "file", accept = "image/*", @class = "upload" })*@
                        @*@Html.TextBoxFor(m => m.Slides[1], new { type = "file", accept = "image/*", @class = "upload" })*@
                    </div>
                </li>
                <!-- /ko -->
                <!-- ko if: slides().length < 5 -->
                <li style="display: inline-block">
                    <button type="button" class="yeah" data-bind="click: addImage" style="display: block">Ny bild</button>
                </li>
                <!-- /ko -->
            </ul>
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.Image)
        </div>

        @*<div data-bind="visible: !isEditing" style="margin-top: 20px">
            @Html.LabelFor(m => m.ImageFile)
            <div class="file-upload btn btn-danger">
                <input id="selected-file" type="text" placeholder="Tiddelipom" />
                <span>Välj bildfil</span>
                @Html.TextBoxFor(m => m.ImageFile, new { type = "file", accept = "image/*", @class = "upload" })
            </div>
            <button type="button" data-bind="click: removeImage">Avbryt</button>
        </div>*@
    </fieldset>
    <button id="submit-button" class="yeah" type="submit" data-bind="text: addButtonText" />
}

<script>
    var Mainichi = Mainichi || {};
    Mainichi.ViewModels = Mainichi.ViewModels || {};
    Mainichi.ViewModels.Admin = Mainichi.ViewModels.Admin || {};
    Mainichi.ViewModels.Admin.Models = Mainichi.ViewModels.Admin.Models || {};
    Mainichi.ViewModels.Admin.Models.Thing = Mainichi.ViewModels.Admin.Models.Thing || {};
    
    Mainichi.ViewModels.Admin.Models.Thing.Id = @Html.RenderAsJson(Model.Id);
    Mainichi.ViewModels.Admin.Models.Thing.Slides = @Html.RenderAsJson(Model.Slides) || [{}];
    Mainichi.ViewModels.Admin.Models.Thing.Attributes = @Html.RenderAsJson(Model.Attributes) || [];

    
    //document.getElementById("ImageFile").onchange = function () {
    //    document.getElementById("selected-file").value = this.value.split('\\')[2];
    //};
</script>

@section scripts {
    @Scripts.Render("~/bundles/validation")
    @Scripts.Render("~/Scripts/Admin/thing.js")
}